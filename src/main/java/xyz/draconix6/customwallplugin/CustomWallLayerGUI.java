package xyz.draconix6.customwallplugin;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import xyz.duncanruns.julti.gui.JultiGUI;

import javax.swing.*;
import java.awt.*;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

// cbf figuring this out nvm
public class CustomWallLayerGUI extends JFrame {
    private static CustomWallLayerGUI instance = null;
    private JPanel mainPanel;
    private JPanel topLayerPanel;
    private JPanel midLayerPanel;
    private JPanel botLayerPanel;
    private JPanel savePanel;
    private JButton saveButton;
    private JComboBox topLayerComboBox;
    private JComboBox midLayerComboBox;
    private JComboBox botLayerComboBox;
    private JLabel topLayerLabel;
    private JLabel botLayerLabel;
    private JLabel midLayerLabel;
    private boolean closed = false;

    public CustomWallLayerGUI() {
        this.setTitle("Layers");
        this.setContentPane(mainPanel);

        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                CustomWallLayerGUI.this.onClose();
            }
        });

        this.updateForm();

        this.revalidate();
        this.pack();
        this.setResizable(false);
        this.setVisible(true);

        this.saveButton.addActionListener(e -> this.save());
    }

    public static CustomWallLayerGUI open(Point initialLocation) {
        if (instance == null || instance.isClosed()) {
            instance = new CustomWallLayerGUI();
            if (initialLocation != null) {
                instance.setLocation(initialLocation);
            }
        } else {
            instance.requestFocus();
        }
        return instance;
    }

    private void updateForm() {
        CustomWallLayout layout = CustomWallOptions.getCustomWallOptions().currentLayout;

        this.topLayerComboBox.addItem("Focus");
        this.topLayerComboBox.addItem("Lock");
        this.topLayerComboBox.addItem("BG");

        this.midLayerComboBox.addItem("Focus");
        this.midLayerComboBox.addItem("Lock");
        this.midLayerComboBox.addItem("BG");

        this.botLayerComboBox.addItem("Focus");
        this.botLayerComboBox.addItem("Lock");
        this.botLayerComboBox.addItem("BG");

        this.topLayerComboBox.setSelectedItem(layout.layers[2]);
        this.topLayerComboBox.repaint();

        this.midLayerComboBox.setSelectedItem(layout.layers[1]);
        this.midLayerComboBox.repaint();

        this.botLayerComboBox.setSelectedItem(layout.layers[0]);
        this.botLayerComboBox.repaint();
    }

    private synchronized void save() {
        CustomWallOptions options = CustomWallOptions.getCustomWallOptions();

        String topLayer = (String) this.topLayerComboBox.getSelectedItem();
        String midLayer = (String) this.midLayerComboBox.getSelectedItem();
        String botLayer = (String) this.botLayerComboBox.getSelectedItem();

        if (topLayer == null || midLayer == null || botLayer == null) {
            JOptionPane.showMessageDialog(JultiGUI.getPluginsGUI(), "Please assign a group to each layer!", "Custom Wall - Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (topLayer.equals(midLayer) || midLayer.equals(botLayer) || botLayer.equals(topLayer)) {
            JOptionPane.showMessageDialog(JultiGUI.getPluginsGUI(), "Please only assign one group to one layer!", "Custom Wall - Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        options.currentLayout.layers[2] = topLayer;
        options.currentLayout.layers[1] = midLayer;
        options.currentLayout.layers[0] = botLayer;

        this.updateForm();
        CustomWallOptions.save();
    }

    private void onClose() {
        this.closed = true;
    }

    private boolean isClosed() {
        return this.closed;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(4, 1, new Insets(5, 5, 5, 5), -1, -1));
        topLayerPanel = new JPanel();
        topLayerPanel.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.add(topLayerPanel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        topLayerComboBox = new JComboBox();
        topLayerPanel.add(topLayerComboBox, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        topLayerLabel = new JLabel();
        topLayerLabel.setText("Top");
        topLayerPanel.add(topLayerLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        midLayerPanel = new JPanel();
        midLayerPanel.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.add(midLayerPanel, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        midLayerComboBox = new JComboBox();
        midLayerPanel.add(midLayerComboBox, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        midLayerLabel = new JLabel();
        midLayerLabel.setText("Middle");
        midLayerPanel.add(midLayerLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        botLayerPanel = new JPanel();
        botLayerPanel.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.add(botLayerPanel, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        botLayerComboBox = new JComboBox();
        botLayerPanel.add(botLayerComboBox, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        botLayerLabel = new JLabel();
        botLayerLabel.setText("Bottom");
        botLayerPanel.add(botLayerLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        savePanel = new JPanel();
        savePanel.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.add(savePanel, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        saveButton = new JButton();
        saveButton.setText("Save");
        savePanel.add(saveButton, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        topLayerLabel.setLabelFor(topLayerComboBox);
        midLayerLabel.setLabelFor(midLayerComboBox);
        botLayerLabel.setLabelFor(botLayerComboBox);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
